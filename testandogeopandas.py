# -*- coding: utf-8 -*-
"""TestandoGeoPandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WmjxjYx6uSdz1JdeprWHlRXIyBxtN0eH
"""

!pip install geopandas

import matplotlib.pyplot as plt
import geopandas 
from shapely.geometry import Polygon

capitais = geopandas.read_file(geopandas.datasets.get_path("naturalearth_cities"))
mundo = geopandas.read_file(geopandas.datasets.get_path("naturalearth_lowres"))

# Continentes
america_sul = world[world["continent"] == "South America"]
america_norte = world[world["continent"] == "North America"]
africa = world[world["continent"]=="Africa"]
asia = world[world["continent"]=="Asia"]
europa = world[world['continent']=="Europe"]


# Desenha poligono
polygon = Polygon([(0, 0), (0, 90), (180, 90), (180, 0), (0, 0)])
poly_gdf = geopandas.GeoDataFrame([1], geometry=[polygon], crs=mundo.crs)



fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))
mundo.plot(ax=ax1)#A parte azul, mundo completo
poly_gdf.boundary.plot(ax=ax1, color="red")
ax1.set_title("Dados mundiais não analisados", fontsize=25)
ax1.set_axis_off()
mundo_destacado = mundo.clip(polygon)
mundo.plot(ax=ax2, color="gray")
mundo_destacado.plot(ax=ax2, color="purple")
mundo.boundary.plot(ax=ax2)

poly_gdf.boundary.plot(ax=ax2, color="red")
america_sul.boundary.plot(ax=ax2, color="green")
america_norte.boundary.plot(ax=ax2, color="red")
africa.boundary.plot(ax=ax2, color="blue")
europa.boundary.plot(ax=ax2, color="yellow")
asia.boundary.plot(ax=ax2, color="orange")
capitais.plot(ax=ax2, color="silver")
ax2.set_title("Dados mundiais mensurados", fontsize=25)
ax2.set_axis_off()
plt.show()

# plt.show()

fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))
mundo.plot(ax=ax1)#A parte azul, mundo completo
poly_gdf.boundary.plot(ax=ax1, color="red")
ax1.set_title("Dados mundiais não analisados", fontsize=25)
ax1.set_axis_off()
mundo_destacado = mundo.clip(polygon)
mundo.plot(ax=ax2, color="gray")
mundo_destacado.plot(ax=ax2, color="purple")
mundo.boundary.plot(ax=ax2)
poly_gdf.boundary.plot(ax=ax2, color="red")
america_sul.boundary.plot(ax=ax2, color="green")
# america_norte.boundary.plot(ax=ax2, color="red")
# africa.boundary.plot(ax=ax2, color="blue")
# asia.boundary.plot(ax=ax2, color="orange")
capitais.plot(ax=ax2, color="silver")
ax2.set_title("Dados mundiais mensurados", fontsize=25)
ax2.set_axis_off()
plt.show()

capitals_clipped = capitals.clip(south_america)

# Plot the clipped data
# The plot below shows the results of the clip function applied to the capital cities
fig, ax = plt.subplots(figsize=(12, 8))
capitals_clipped.plot(ax=ax, color="purple")
south_america.boundary.plot(ax=ax, color="green")
ax.set_title("Capitals Clipped", fontsize=20)
ax.set_axis_off()
plt.show()

capitals_clipped = capitals.clip(asia)

# Plot the clipped data
# The plot below shows the results of the clip function applied to the capital cities
fig, ax = plt.subplots(figsize=(12, 8))
capitals_clipped.plot(ax=ax, color="purple")
asia.boundary.plot(ax=ax, color="green")
ax.set_title("Capitals Clipped", fontsize=20)
ax.set_axis_off()
plt.show()

capitals_clipped = capitals.clip(europa)

# Plot the clipped data
# The plot below shows the results of the clip function applied to the capital cities
fig, ax = plt.subplots(figsize=(12, 8))
capitals_clipped.plot(ax=ax, color="purple")
europa.boundary.plot(ax=ax, color="green")
ax.set_title("Capitals Clipped", fontsize=20)
ax.set_axis_off()
plt.show()

capitals_clipped = capitals.clip(america_norte)

# Plot the clipped data
# The plot below shows the results of the clip function applied to the capital cities
fig, ax = plt.subplots(figsize=(12, 8))
capitals_clipped.plot(ax=ax, color="purple")
america_norte.boundary.plot(ax=ax, color="green")
ax.set_title("Capitals Clipped", fontsize=20)
ax.set_axis_off()
plt.show()